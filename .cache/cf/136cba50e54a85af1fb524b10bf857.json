{"id":"node_modules/async/eachSeries.js","dependencies":[{"name":"/project/palindrome-cli/package.json","includedInParent":true,"mtime":1667367701017},{"name":"/project/palindrome-cli/node_modules/async/package.json","includedInParent":true,"mtime":1667367255941},{"name":"./eachLimit.js","loc":{"line":7,"column":25,"index":106},"parent":"/project/palindrome-cli/node_modules/async/eachSeries.js","resolved":"/project/palindrome-cli/node_modules/async/eachLimit.js"},{"name":"./internal/awaitify.js","loc":{"line":11,"column":24,"index":205},"parent":"/project/palindrome-cli/node_modules/async/eachSeries.js","resolved":"/project/palindrome-cli/node_modules/async/internal/awaitify.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _eachLimit = require('./eachLimit.js');\n\nvar _eachLimit2 = _interopRequireDefault(_eachLimit);\n\nvar _awaitify = require('./internal/awaitify.js');\n\nvar _awaitify2 = _interopRequireDefault(_awaitify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n *\n * Note, that unlike [`each`]{@link module:Collections.each}, this function applies iteratee to each item\n * in series and therefore the iteratee functions will complete in order.\n\n * @name eachSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfSeries`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachSeries(coll, iteratee, callback) {\n  return (0, _eachLimit2.default)(coll, 1, iteratee, callback);\n}\nexports.default = (0, _awaitify2.default)(eachSeries, 3);\nmodule.exports = exports['default'];"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/async/eachSeries.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/async/eachSeries.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}}],"sources":{"node_modules/async/eachSeries.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _eachLimit = require('./eachLimit.js');\n\nvar _eachLimit2 = _interopRequireDefault(_eachLimit);\n\nvar _awaitify = require('./internal/awaitify.js');\n\nvar _awaitify2 = _interopRequireDefault(_awaitify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n *\n * Note, that unlike [`each`]{@link module:Collections.each}, this function applies iteratee to each item\n * in series and therefore the iteratee functions will complete in order.\n\n * @name eachSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfSeries`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachSeries(coll, iteratee, callback) {\n  return (0, _eachLimit2.default)(coll, 1, iteratee, callback);\n}\nexports.default = (0, _awaitify2.default)(eachSeries, 3);\nmodule.exports = exports['default'];"},"lineCount":44}},"error":null,"hash":"99cfe22f95223c369eef70f7916016fa","cacheData":{"env":{}}}